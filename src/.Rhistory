select(Species,Trait,Value) %>% # see above
group_by(Trait,Species) %>%
summarise_all(funs(min))
# highest trait values
traitsmax <- traits %>%
select(Species,Trait,Value) %>% # see above
group_by(Trait,Species) %>%
summarise_all(funs(max))
# combine into data frame
traitsdata <- traitmeans
traitsdata$min <- traitsmin$Value
traitsdata$max <- traitsmax$Value
View(traitsdata)
# mean trait values
traitmeans <- traits %>%
select(Species,Trait,mean = Value) %>% # info about trait transformations is lost! Keep this in mind.
group_by(Trait,Species) %>%
summarise_all(funs(mean))
# lowest trait values
traitsmin <- traits %>%
select(Species,Trait,Value) %>% # see above
group_by(Trait,Species) %>%
summarise_all(funs(min))
# highest trait values
traitsmax <- traits %>%
select(Species,Trait,Value) %>% # see above
group_by(Trait,Species) %>%
summarise_all(funs(max))
# combine into data frame
traitsdata <- traitmeans
traitsdata$min <- traitsmin$Value
traitsdata$max <- traitsmax$Value
write.csv(traitsdata,'Data/INCLINE/traitsdata.csv')
install.packages("ncdf4")
library(ncdf4)
ncpath <- 'Data/platformtest_alp4_august2020/archive/platformtest_alp4_jun2020/lnd/'
files = list.files(ncpath,pattern='*.nc',full.names=TRUE)
ncpath <- 'Data/platformtest_alp4_august2020/archive/platformtest_alp4_jun2020/lnd/hist/'
files = list.files(ncpath,pattern='*.nc',full.names=TRUE)
print(files)
library(ncdf4)
ncpath <- 'Data/platformtest_alp4_august2020/archive/platformtest_alp4_jun2020/lnd/hist/'
files = list.files(ncpath,pattern='*.nc',full.names=TRUE)
ncname1 <- 'platformtest_alp4_jun2020.clm2.h0.0001-01'
ncname2 <- 'platformtest_alp4_jun2020.clm2.h0.1791-12'
ncfname <- paste(ncpath, ncname1, ".nc", sep="")
ncdata <- nc_open(ncfname,verbose = TRUE)
View(ncdata)
View(ncdata)
View(ncdata)
{
sink('platformtest_aug_2020_alp1.txt')
print(nc_data)
sink()
}
{
sink('platformtest_aug_2020_alp1.txt')
print(ncdata)
sink()
}
ncvar_get(ncdata, 'AREA_PLANT')
AREA_PLANT <- ncvar_get(ncdata, 'AREA_PLANT')
ncdata[["var"]][["CANOPY_AREA_BY_AGE"]]
view(ncdata[["var"]][["CANOPY_AREA_BY_AGE"]])
View(ncdata[["var"]][["CANOPY_AREA_BY_AGE"]])
SEED_BANK <- ncvar_get(ncdata, 'SEED_BANK')
SEEDS_IN_EXTERN_ELEM <- ncvar_get(ncdata, 'SEEDS_IN_EXTERN_ELEM')
SEEDS_IN_LOCAL_ELEM <- ncvar_get(ncdata, 'SEEDS_IN_LOCAL_ELEM')
#########    TRAITS    ##########
# measured traits for three species: Veronica officinalis, Sibbaldia procumbens, Succisa pratensis
traits <- read.csv('Data/INCLINE/raw/Eva_traits.csv')
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
traits <- na.omit(traits) # removing rows with NA values (277 rows lost)
View(traits)
ln(2.70)
exp(2.70)
print(exp(2.70))
(exp(2.70))
(minst<-exp(2.70))
# [1] "Plant_Height_mm"       "Wet_Mass_g"            "Dry_Mass_g"
# [4] "Leaf_Area_cm2"         "N_percent"             "C_percent"
# [7] "CN_ratio"              "SLA_cm2_g"             "LDMC"
# [10] "Leaf_Thickness_Ave_mm"
print(unique(traits$Trait_trans))
# [1] "Plant_Height_mm"       "Wet_Mass_g"            "Dry_Mass_g"
# [4] "Leaf_Area_cm2"         "N_percent"             "C_percent"
# [7] "CN_ratio"              "SLA_cm2_g"             "LDMC"
# [10] "Leaf_Thickness_Ave_mm"
print(unique(traits$Trait_trans))
print(unique(traits$Trait_trans))
#########    TRAITS    ##########
# measured traits for three species: Veronica officinalis, Sibbaldia procumbens, Succisa pratensis
traits <- read.csv('Data/INCLINE/raw/Eva_traits.csv')
# [1] "Plant_Height_mm"       "Wet_Mass_g"            "Dry_Mass_g"
# [4] "Leaf_Area_cm2"         "N_percent"             "C_percent"
# [7] "CN_ratio"              "SLA_cm2_g"             "LDMC"
# [10] "Leaf_Thickness_Ave_mm"
print(unique(traits$Trait_trans))
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
library(tidyverse)
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
traits <- na.omit(traits) # removing rows with NA values (277 rows lost)
print(unique(traits$Trait)) # Which traits do we have?
View(traits)
# [1] "Plant_Height_mm"       "Wet_Mass_g"            "Dry_Mass_g"
# [4] "Leaf_Area_cm2"         "N_percent"             "C_percent"
# [7] "CN_ratio"              "SLA_cm2_g"             "LDMC"
# [10] "Leaf_Thickness_Ave_mm"
print(unique(traits$Trait_trans))
unique(traits$Trait_trans)
# De-transform traits
traits[traits$Trait_trans=='Plant_Height_mm_log',]
library(tidyverse)
#########    TRAITS    ##########
# measured traits for three species: Veronica officinalis, Sibbaldia procumbens, Succisa pratensis
traits <- read.csv('Data/INCLINE/raw/Eva_traits.csv')
head(traits)
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
traits <- na.omit(traits) # removing rows with NA values (277 rows lost)
print(unique(traits$Trait)) # Which traits do we have?
# [1] "Plant_Height_mm"       "Wet_Mass_g"            "Dry_Mass_g"
# [4] "Leaf_Area_cm2"         "N_percent"             "C_percent"
# [7] "CN_ratio"              "SLA_cm2_g"             "LDMC"
# [10] "Leaf_Thickness_Ave_mm"
print(unique(traits$Trait_trans)) # Wich traits are transformed, and how?
test <- aggregate(Value ~ Trait_trans, data=traits, FUN=exp)
View(test)
test <- aggregate(Value ~ Trait_trans=='Plant_Height_mm_log', data=traits, FUN=exp)
View(test)
# De-transform traits
# traits[traits$Trait_trans=='Plant_Height_mm_log',]
# traits <- apply(traits,1,exp(traits$Value))
# test <- aggregate(Value ~ Trait_trans=='Plant_Height_mm_log', data=traits, FUN=exp)
traits <- traits %>%
group_by(Trait_trans=='Plant_Height_mm_log') %>%
mutate(Value, exp(x))
# De-transform traits
# traits[traits$Trait_trans=='Plant_Height_mm_log',]
# traits <- apply(traits,1,exp(traits$Value))
# test <- aggregate(Value ~ Trait_trans=='Plant_Height_mm_log', data=traits, FUN=exp)
traits <- traits %>%
group_by(Trait_trans=='Plant_Height_mm_log') %>%
mutate(detransformed = exp(Value))
#########    TRAITS    ##########
# measured traits for three species: Veronica officinalis, Sibbaldia procumbens, Succisa pratensis
traits <- read.csv('Data/INCLINE/raw/Eva_traits.csv')
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
traits <- na.omit(traits) # removing rows with NA values (277 rows lost)
# De-transform traits
# traits[traits$Trait_trans=='Plant_Height_mm_log',]
# traits <- apply(traits,1,exp(traits$Value))
# test <- aggregate(Value ~ Trait_trans=='Plant_Height_mm_log', data=traits, FUN=exp)
traits <- traits %>%
group_by(Trait_trans=='Plant_Height_mm_log') %>%
mutate(detransformed = exp(Value))
# [1] "Plant_Height_mm"       "Wet_Mass_g"            "Dry_Mass_g"
# [4] "Leaf_Area_cm2"         "N_percent"             "C_percent"
# [7] "CN_ratio"              "SLA_cm2_g"             "LDMC"
# [10] "Leaf_Thickness_Ave_mm"
print(unique(traits$Trait_trans)) # Wich traits are transformed, and how?
# De-transform traits
test <- traits %>%
str_subset(traits$Trait_trans,'log')  %>%
mutate(detransformed = exp(Value))
View(traits)
#########    TRAITS    ##########
# measured traits for three species: Veronica officinalis, Sibbaldia procumbens, Succisa pratensis
traits <- read.csv('Data/INCLINE/raw/Eva_traits.csv')
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
traits <- na.omit(traits) # removing rows with NA values (277 rows lost)
# De-transform traits
test <- traits %>%
str_subset(traits$Trait_trans,'log')  %>%
mutate(detransformed = exp(Value))
# De-transform traits
test <- traits %>%
str_subset(Trait_trans,'log')  %>%
mutate(detransformed = exp(Value))
# De-transform traits
test <- traits %>%
str_subset(as.string(traits$Trait_trans),'log')  %>%
mutate(detransformed = exp(Value))
# De-transform traits
test <- traits %>%
traits[,str_which(traits$Trait_trans,'log')] %>%
mutate(detransformed = exp(Value))
test1 <- traits[,traits$Trait_trans==grep('log')]
test1 <- traits[,traits$Trait_trans==grep('log',traits$Trait_trans)]
test2<-subset(traits,traits$Trait_trans==grep('log',traits$Trait_trans))
test2<-subset(traits,which(grep('log',traits$Trait_trans) %in% traits$Trait_trans))
# De-transform traits
test <- traits %>%
mutate(detransformed = ifesle(Trait_trans==str_detect(Trait_trans,'log'),exp(Value),NA))
# De-transform traits
test <- traits %>%
mutate(detransformed = if_esle(Trait_trans==str_detect(Trait_trans,'log'),exp(Value),NA))
test2 <- traits %>%
mutate(detransformed = ifesle(Trait_trans=='Plant_Height_mm_log',exp(Value),NA))
test2 <- traits %>%
mutate(detransformed = if_esle(Trait_trans=='Plant_Height_mm_log',exp(Value),NA))
# De-transform traits
test <- traits %>%
mutate(detransformed = ifelse(Trait_trans==str_detect(Trait_trans,'log'),exp(Value),NA))
View(test)
test2 <- traits %>%
mutate(detransformed = ifelse(Trait_trans=='Plant_Height_mm_log',exp(Value),NA))
View(test2)
View(test)
# De-transform traits
test <- traits %>%
mutate(detransformed = ifelse(Trait_trans==str_which(Trait_trans,'log'),exp(Value),NA))
# De-transform traits
test <- traits %>%
mutate(detransformed = ifelse(Trait_trans==grep('log',Trait_trans),exp(Value),NA))
# De-transform traits
test <- traits %>%
mutate(detransformed = ifelse(str_detect(Trait_trans,'log'),exp(Value),NA))
rm(test,test1,test2)
#########    TRAITS    ##########
# measured traits for three species: Veronica officinalis, Sibbaldia procumbens, Succisa pratensis
traits <- read.csv('Data/INCLINE/raw/Eva_traits.csv')
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
traits <- na.omit(traits) # removing rows with NA values (277 rows lost)
# De-transform values for all log transformed variables
traits <- traits %>%
mutate(detransformed = ifelse(str_detect(Trait_trans,'log'),exp(Value),NA))
library(tidyverse)
library(tidyverse)
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
traits <- na.omit(traits) # removing rows with NA values (277 rows lost)
# De-transform values for all log transformed variables
traits <- traits %>%
mutate(detransformed = ifelse(str_detect(Trait_trans,'log'),exp(Value),NA))
## merge this new column with the old ones to get only raw values! Want to use 'Values' when 'detransformed' is NA, but otherwise let 'detransformed' overwrite.
traits <- traits %>%
mutate(detransformed = coalesce(detransformed,Value))
#########    TRAITS    ##########
# measured traits for three species: Veronica officinalis, Sibbaldia procumbens, Succisa pratensis
traits <- read.csv('Data/INCLINE/raw/Eva_traits.csv')
head(traits)
traits <- traits %>%
select(Species,Trait,Value,Trait_trans,Precip_level) # excluding most columns.
traits <- na.omit(traits) # removing rows with NA values (277 rows lost)
# De-transform values for all log transformed variables
traits <- traits %>%
mutate(rawValue = ifelse(str_detect(Trait_trans,'log'),exp(Value),NA)) %>%
mutate(rawValue = coalesce(detransformed,Value))
# De-transform values for all log transformed variables
traits <- traits %>%
mutate(rawValue = ifelse(str_detect(Trait_trans,'log'),exp(Value),NA)) %>%
mutate(rawValue = coalesce(rawValue,Value))
# mean trait values
traitmeans <- traits %>%
select(Species,Trait,mean = rawValue) %>% # info about trait transformations is lost! Keep this in mind.
group_by(Trait,Species) %>%
summarise_all(funs(mean))
# lowest trait values
traitsmin <- traits %>%
select(Species,Trait,rawValue) %>% # see above
group_by(Trait,Species) %>%
summarise_all(funs(min))
# highest trait values
traitsmax <- traits %>%
select(Species,Trait,rawValue) %>% # see above
group_by(Trait,Species) %>%
summarise_all(funs(max))
# combine into data frame
traitsdata <- traitmeans
traitsdata$min <- traitsmin$rawValue
traitsdata$max <- traitsmax$rawValue
write.csv(traitsdata,'Data/INCLINE/traitsdata.csv')
#########    TRAITS    ##########
# measured traits for three species: Veronica officinalis, Sibbaldia procumbens, Succisa pratensis
traits <- read.csv('Data/INCLINE/raw/Eva_traits.csv')
library(ncdf4)
ncpath <- 'Data/platformtest_alp4_august2020/archive/platformtest_alp4_jun2020/lnd/hist/'
files = list.files(ncpath,pattern='*.nc',full.names=TRUE)# there are over 21 thousand files! Reading the first and last for now.
ncname1 <- 'platformtest_alp4_jun2020.clm2.h0.0001-01'
ncname2 <- 'platformtest_alp4_jun2020.clm2.h0.1791-12'
ncfname <- paste(ncpath, ncname1, ".nc", sep="")
ncdata <- nc_open(ncfname)
View(ncdata) # the variables are inside the 'var' list
# make a text file for some reason
{
sink('platformtest_aug_2020_alp1.txt')
print(ncdata)
sink()
}
#
AREA_PLANT <- ncvar_get(ncdata, 'AREA_PLANT') # total area occupied by plants
View(ncdata[["var"]][["CANOPY_AREA_BY_AGE"]])
ED_NCOHORTS <- ncvar_get(ncdata, 'ED_NCOHORTS')
CANOPY_AREA_BY_AGE <- ncvar_get(ncdata, 'CANOPY_AREA_BY_AGE')
ED_balive <- ncvar_get(ncdata, 'ED_balive') # gC_m^2
ED_NPATCHES <- ncvar_get(ncdata, 'ED_NPATCHES') #
ED_biomass <- ncvar_get(ncdata, 'ED_biomass')
ELAI <- ncvar_get(ncdata, 'ELAI')# exposed one-sided leaf area index, unit m2/m2
SEED_BANK <- ncvar_get(ncdata, 'SEED_BANK') #
SEEDS_IN_LOCAL_ELEM <- ncvar_get(ncdata, 'SEEDS_IN_LOCAL_ELEM') #
SEEDS_IN_EXTERN_ELEM <- ncvar_get(ncdata, 'SEEDS_IN_EXTERN_ELEM') #
library(ncdf4)
library(fields)
LEAF_HEIGHT_DIST <- ncvar_get(ncdata, 'LEAF_HEIGHT_DIST')
LEAF_HEIGHT_DIST
# look at the file attributes
attributes(ncdata)$names
print(paste("The file has",ncdata$nvars,"variables,",ncdata$ndims,"dimensions and",ncdata$natts,"NetCDF attributes"))
# Get a list of the nc variable names.
attributes(nc$var)$names
# Get a list of the nc variable names.
attributes(ncdata$var)$names
ncatt_get(ncdata, attributes(nc$var)$names[1])
ncatt_get(ncdata, attributes(ncdata$var)$names[1])
ncatt_get(ncdata, attributes(ncdata$var)$names[15])
sclm_mean <- ncvar_get(ncdata, attributes(ncdata$var)$names[1])
dim(sclm_mean)
attributes(ncdata$dim)$names
# Retrieve the attributes
nc_atts <- ncatt_get(ncdata, 0)
View(nc_atts)
# Retrieve the attributes
nc_atts <- ncatt_get(ncdata, 0); View(nc_atts)
attributes(ncdata)$names
#
attributes(ncdata$dim)$names
rm(sclm_mean)
# Retrieve a matrix of the first var, "FATES size-class map into size x patch age"
sizeClassMap <- ncvar_get(ncdata, attributes(ncdata$var)$names[1]) #
dim(sizeClassMap) # 91
td <- read.csv('Data/INCLINE/traitsdata.csv')
View(td)
head(td)
td <- read.csv('Data/INCLINE/traitsdata.csv')
head(td)
View(td)
# fates_leaf_diameter:long_name = "Characteristic leaf dimension"
# see https://github.com/NGEET/fates/issues/815
wl <- read.csv('Data/INCLINE/SucVer_WL.csv')
wl <- na.omit(wl)
table(wl)
SucWL <- mean(wl$Species=='Suc_pra')
VerWL <- mean(wl$Species=='Ver_off')
View(wl)
SucWL <- median(wl$Species=='Suc_pra') #
SucWL <- median(wl$Species=='Suc_pra') #
VerWL <- median(wl$Species=='Ver_off') #
SucWL <- mean(wl$Species=='Suc_pra') #
VerWL <- mean(wl$Species=='Ver_off') #
which(wl==0)
which(wl==1)
which(wl==7)
which(wl==0)
min(wl$Species=='Suc_pra') #
which(wl[,"Species"=="Suc_pra"]==0)
which(wl[,"Species"=="Ver_off"]==0)
min(wl$Species=='Suc_pra') #
min(wl$Species=='Suc_pra') #
wl$Species=='Suc_pra'
# fates_leaf_diameter:long_name = "Characteristic leaf dimension"
# see https://github.com/NGEET/fates/issues/815
wl <- read.csv('Data/INCLINE/SucVer_WL.csv')
wl <- na.omit(wl)
min(wl$Species=='Suc_pra') #
min(wl[,Species=='Suc_pra']) #
min(wl[,'Species'=='Suc_pra']) #
attach(wl)
min(wl[,Species=='Suc_pra']) #
detach(wl)
library(tidyverse)
wl_param <- wl %>%
group_by(Species) %>%
min()
library(tidyverse)
td <- read.csv('Data/INCLINE/traitsdata.csv')
head(td)
# fates_leaf_diameter:long_name = "Characteristic leaf dimension"
# see https://github.com/NGEET/fates/issues/815
wl <- read.csv('Data/INCLINE/SucVer_WL.csv')
View(wl)
wl_param <- wl %>%
group_by(Species) %>%
summarise_at(vars(WL), funs(min, mean, max))
wl <- na.omit(wl)
wl_param <- wl %>%
group_by(Species) %>%
summarise_at(vars(WL), functions(min, mean, max))
wl_param <- wl %>%
group_by(Species) %>%
summarise_at(vars(WL), funs(min, mean, max))
View(wl_param)
wl2 <- read.csv('Data/INCLINE/sibpro_ll.csv')
ll <- read.csv('Data/INCLINE/sibpro_ll.csv')
# Sib pro: "The ratio of the length to the breadth of the leaflet is 1-2:1 and is constant for the species throughout its geographical range" Coker, P. D. (1966). Sibbaldia Procumbens L. Journal of Ecology, 54(3), 823–831. https://doi.org/10.2307/2257820
# To convert from leaflet length to breadth, assume the ratio is 2:1 and divide by 2
wl2 <- ll/2
View(wl_param)
wl_param[3,] <- c('Sib_pro',summarise(wl2, funs(min, mean, max)))
c('Sib_pro',summarise(wl2, funs(min, mean, max)))
summarise(wl2, funs(min, mean, max))
summarise_at(wl2, funs(min, mean, max))
# Sib pro: "The ratio of the length to the breadth of the leaflet is 1-2:1 and is constant for the species throughout its geographical range" Coker, P. D. (1966). Sibbaldia Procumbens L. Journal of Ecology, 54(3), 823–831. https://doi.org/10.2307/2257820
# To convert from leaflet length to breadth, assume the ratio is 2:1 and divide by 2
wl2 <- c(ll/2)
summarise_at(wl2, funs(min, mean, max))
# Sib pro: "The ratio of the length to the breadth of the leaflet is 1-2:1 and is constant for the species throughout its geographical range" Coker, P. D. (1966). Sibbaldia Procumbens L. Journal of Ecology, 54(3), 823–831. https://doi.org/10.2307/2257820
# To convert from leaflet length to breadth, assume the ratio is 2:1 and divide by 2
wl2 <- as.vector(ll/2)
wl_param[3,] <- c('Sib_pro',summarise_at(wl2$LL, funs(min, mean, max)))
View(wl2)
wl_param[3,] <- c('Sib_pro',summarise(wl2$LL, funs(min, mean, max)))
mmm <- wl2 %>% summarise(LL,funs(min, mean, max))
mmm <- wl2 %>% summarise(vars(LL),funs(min, mean, max))
mmm <- wl2 %>% summarise_at(vars(LL),funs(min, mean, max))
View(mmm)
mmm
wl_param[3,] <- c('Sib_pro', mmm)
wl_param[3,] <- c('Sib_pro', mmm[1:3])
mmm[1]
mmm[[1]]
wl_param[3,] <- c('Sib_pro', mmm[[1:3]])
mmm[[1:3]]
wl_param[3,] <- c('Sib_pro', mmm[[1]],mmm[[2]],mmm[[3]])
wl_param[3,]
wl_param[1,]
nrow(wl_param)
wl_param[3,] <- list('Sib_pro', mmm[[1]],mmm[[2]],mmm[[3]])
wl_param[3,] <- c('Sib_pro', c(mmm[[1]],mmm[[2]],mmm[[3]]))
View(wl_param)
wl_param[3,1] <- c('Sib_pro')
wl_param[3,2:4] <- c(mmm[[1]],mmm[[2]],mmm[[3]]))
wl_param[3,2:4] <- c(mmm[[1]],mmm[[2]],mmm[[3]])
wl_param[3,2:4] <- list(mmm[[1]],mmm[[2]],mmm[[3]])
wl_param[3,2:4] <- wl2 %>% summarise_at(vars(LL),funs(min, mean, max))
wl_param[3,2:4] <- mmm[1,]
wl_param %>% add_row(Species='Sib_pro',2:4=mmm)
wl_param %>% add_row(Species='Sib_pro',min=mmm$min, mean=mmm$mean, max=mmm$max)
wl_param <- wl %>%
group_by(Species) %>%
summarise_at(vars(WL), funs(min, mean, max))
mmm <- wl2 %>% summarise_at(vars(LL),funs(min, mean, max))
wl_param %>% add_row(Species='Sib_pro',min=mmm$min, mean=mmm$mean, max=mmm$max)
fates_leaf_diameter <- wl_param*0.77
wl_param <- wl %>%
group_by(Species) %>%
summarise_at(vars(WL), funs(min, mean, max))
mmm <- wl2 %>% summarise_at(vars(LL),funs(min, mean, max))
wl_param %>% add_row(Species='Sib_pro',min=mmm$min, mean=mmm$mean, max=mmm$max)
wl_param <- wl_param %>%
add_row(Species='Sib_pro',min=mmm$min, mean=mmm$mean, max=mmm$max,
.before = 1)
View(wl_param)
wl_param <- wl %>%
group_by(Species) %>%
summarise_at(vars(WL), funs(min, mean, max))
mmm <- wl2 %>% summarise_at(vars(LL),funs(min, mean, max))
wl_param <- wl_param %>%
add_row(Species='Sib_pro',min=mmm$min, mean=mmm$mean, max=mmm$max,
.before = 1) %>%
pivot_longer()
wl_param <- wl_param %>%
add_row(Species='Sib_pro',min=mmm$min, mean=mmm$mean, max=mmm$max,
.before = 1) %>%
pivot_longer(everything())
wl_param <- wl_param %>%
add_row(Species='Sib_pro',min=mmm$min, mean=mmm$mean, max=mmm$max,
.before = 1) %>%
pivot_longer(cols = 2:4)
(wl_param$value*0.77)
wl_param$fates_leaf_diameter <- wl_param$value*0.77
write.csv(wl_param,'Data/INCLINE/fates_leaf_diameter.csv')
(wl_param$fates_leaf_diameter <- wl_param$value*0.77/1000)
library(ncdf4)
library(fields)
ncpath <- 'Data/platformtest_alp4_august2020/archive/platformtest_alp4_jun2020/lnd/hist/'
files = list.files(ncpath,pattern='*.nc',full.names=TRUE)# there are over 21 thousand files! Reading the first and last for now.
ncname1 <- 'platformtest_alp4_jun2020.clm2.h0.0001-01'
ncname2 <- 'platformtest_alp4_jun2020.clm2.h0.1791-12'
ncfname <- paste(ncpath, ncname1, ".nc", sep="")
ncdata <- nc_open(ncfname)
View(ncdata) # the variables are inside the 'var' list at the bottom.
# make a text file to view the nc file attributes there
{
sink('platformtest_aug_2020_alp1.txt')
print(ncdata)
sink()
}
# look at the file attributes
nc_atts <- ncatt_get(ncdata, 0); View(nc_atts)
attributes(ncdata)$names
print(paste("The file has",ncdata$nvars,"variables,",ncdata$ndims,"dimensions and",ncdata$natts,"NetCDF attributes")) # The file has 436 variables, 41 dimensions and 36 NetCDF attributes
attributes(ncdata$dim)$names
# Get a list of the nc variable names.
attributes(ncdata$var)$names
ncatt_get(ncdata, attributes(ncdata$var)$names[1]) # replace number to see different variables
# Retrieve a matrix of the first var, "FATES size-class map into size x patch age"
sizeClassMap <- ncvar_get(ncdata, attributes(ncdata$var)$names[1]) #
dim(sizeClassMap) # 91
# Look at some one-dimensional values
AREA_PLANT <- ncvar_get(ncdata, 'AREA_PLANT') # total area occupied by plants
# close the connection to the nc file when done!
nc_close(ncdata)
library(tidyverse)
data <- read.csv('Data/INCLINE/climate/INCLINE_microclimate.csv')
str(data)
